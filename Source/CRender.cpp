#include "CRender.h"

namespace glliba
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////

	CRender*	CRender::s_pRender = NULL;

	TYPE_DRIVER CRender::m_eTypeDriver = TD_UNKNOWN;

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	CRender::CRender()
		: m_backColor(0.0f,0.0f,0.0f)
		, m_bIsShowDebug(false)

		, m_iScreenWidth(0)
		, m_iScreenHeight(0)
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	CRender::~CRender()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	uint CRender::getWidth() const
	{
		return m_iScreenWidth;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	uint CRender::getHeight() const
	{
		return m_iScreenHeight;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	void CRender::setBackColor( const Vector3& _color )
	{
		m_backColor = _color;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	CRender* CRender::getInstance()
	{
		if (s_pRender)
		{
			return s_pRender;
		}

		return NULL;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////

	void CRender::setActiveDebug( bool _bIsShowNormals )
	{
		m_bIsShowDebug = _bIsShowNormals;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////
}